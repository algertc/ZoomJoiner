
from ctypes import *
from ctypes.wintypes import *
from win32com.client import Dispatch
import struct

#functions
MessageBox = windll.user32.MessageBoxW
FindWindow = windll.user32.FindWindowW
FindWindowEx = windll.user32.FindWindowExW
GetWindow = windll.user32.GetWindow
GetWindowRect = windll.user32.GetWindowRect
GetMenu = windll.user32.GetMenu
SetActiveWindow = windll.user32.SetActiveWindow
GetMenuItemCount = windll.user32.GetMenuItemCount
GetMenuItemInfo = windll.user32.GetMenuItemInfoW
SetMenuItemInfo = windll.user32.SetMenuItemInfoW
GetMenuInfo = windll.user32.GetMenuInfo
GetSubMenu = windll.user32.GetSubMenu
SendMessage = windll.user32.SendMessageW
PostMessage = windll.user32.PostMessageW
GetMenuItemID = windll.user32.GetMenuItemID
GetMenuString = windll.user32.GetMenuStringW
GetWindowText = windll.user32.GetWindowTextW
GetMenuItemRect = windll.user32.GetMenuItemRect
SendMessage = windll.user32.SendMessageW
#SendMessage = windll.user32.SendMessageA
SetParent = windll.user32.SetParent
DestroyWindow = windll.user32.DestroyWindow
GetWindowThreadProcessId = windll.user32.GetWindowThreadProcessId
VirtualAllocEx = windll.kernel32.VirtualAllocEx
VirtualQueryEx = windll.kernel32.VirtualQueryEx
OpenProcess = windll.kernel32.OpenProcess
ReadProcessMemory = windll.kernel32.ReadProcessMemory
WriteProcessMemory = windll.kernel32.WriteProcessMemory
VirtualFreeEx = windll.kernel32.VirtualFreeEx
GetSystemInfo = windll.kernel32.GetSystemInfo
CloseHandle = windll.kernel32.CloseHandle
FlushInstructionCache = windll.kernel32.FlushInstructionCache
GetLastError = windll.kernel32.GetLastError
CreateProcess = windll.kernel32.CreateProcessW

#contants
MF_BYPOSITION = 0x00000400
MB_OKCANCEL = 0x1
TBM_SETPOS = 1029
TRACKBAR_CLASSA = 'msctls_trackbar32'
WM_CLOSE = 0x0010
BM_CLICK = 245
WM_RBUTTONDOWN = 0x204

WM_USER = 1024
TBM_GETPOS = (WM_USER)
GW_CHILD = 5
GW_HWNDNEXT = 2
WM_SETTEXT = 12
WM_SETFOCUS = 0x0007
MN_GETHMENU = 481

TB_GETBUTTON = (WM_USER + 23)
TB_BUTTONCOUNT = (WM_USER + 24)
TB_GETITEMRECT = (WM_USER + 29)
TB_GETBUTTONTEXT = (WM_USER + 45)
LVM_FIRST = 4096 
LVM_GETITEMTEXTA = (LVM_FIRST + 45)
LVM_GETITEMCOUNT = (LVM_FIRST + 4)
LVM_GETITEMA = (LVM_FIRST + 5)
MEM_RESERVE = 8192
MEM_COMMIT = 4096
PAGE_READWRITE = 4
WM_LBUTTONDOWN = 513
WM_LBUTTONUP = 514
WM_KEYUP = 0x0101
WM_COMMAND = 273
LVM_SETITEMSTATE = (LVM_FIRST + 43)
LVM_GETITEMSTATE = (LVM_FIRST + 44)
LVIF_COLFMT = 0x00010000
LVIF_COLUMNS = 0x0200
PAGE_READONLY = 0x02
PROCESS_ALL_ACCESS = 0x1F0FFF

MEM_RESERVE = 8192
MEM_COMMIT = 4096
PAGE_READWRITE = 4
WM_LBUTTONDOWN = 513
WM_LBUTTONUP = 514
PROCESS_ALL_ACCESS = 0x1F0FFF
MEM_RELEASE = 32768
WM_GETTEXT = 0x000D
WM_KEYDOWN = 0x0100
VK_RBUTTON = 0x01
VK_LBUTTON = 0x02
VK_UP = 0x26
VK_RETURN = 0x0D
VK_RIGHT = 0x27
VK_DOWN = 0x28
PBM_GETSTATE = WM_USER + 17
BM_GETCHECK = 240
BST_UNCHECKED = 0
BST_CHECKED = 1
BST_INDETERMINATE = 2
BST_PUSHED = 4
BST_FOCUS = 8

NORMAL_PRIORITY_CLASS = 0x20
CREATE_PRESERVE_CODE_AUTHZ_LEVEL =  0x02000000



#Structures
class STARTUPINFO(Structure):
    _fields_ = [("cb", c_ulong),
                ("lpReserved", c_char_p), #i think
                ("lpDesktop", c_char_p), #i think
                ("lpTitle", c_char_p), #i think
                ("dwx", c_ulong),
                ("dwy", c_ulong),
                ("dwXSize", c_ulong),
                ("dwYSize", c_ulong),
                ("dwXCountChars", c_ulong),
                ("dwYCountChars", c_ulong),
                ("dwFillAttribute", c_ulong),
                ("dwFlags", c_ulong),
                ("wShowWindow", c_ushort),
                ("cbReserved2", c_ushort),
                ("lpReserved2", POINTER(c_byte)),#?
                ("hStdInput", c_void_p), 
                ("hStdOutput", c_void_p),
                ("hStdError", c_void_p)]
    
class PROCESSINFO(Structure):
    _fields_ = [("hProcess", c_void_p),
                ("hThread", c_void_p), 
                ("dwProcessId", c_ulong), 
                ("dwThreadId", c_ulong)]
